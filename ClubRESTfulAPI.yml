swagger: '2.0'
info:
  description: Simple RESTful API with Spring Boot, integrating MongoDB & MySQL databases https://github.com/goyar/ClubRESTfulAPI
  version: "1.1.1"
  title: SpringClubApi
  termsOfService: 'urn:tos'
  contact: {}
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0'
host: '3.212.115.138:8001'
schemes: ["http"]
basePath: /
tags:
  - name: guardian-mongo-controller
    description: Guardian Mongo Controller
  - name: player-mongo-controller
    description: Player Mongo Controller
  - name: charge-mysql-controller
    description: Charge Mysql Controller
  - name: bill-mysql-controller
    description: Bill Mysql Controller
paths:
  /bill/allbill:
    get:
      tags:
        - bill-mysql-controller
      summary: Returns a list that contains all the bills registered in the database
      operationId: getAllBillsUsingGET
      produces:
        - 'application/json'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Bill'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/bill/{guardian_id}':
    post:
      tags:
        - bill-mysql-controller
      summary: Creates a new bill in the database assigned to a particular {guardian_id} if the {guardian_id} registers not billed charges
      operationId: getBillsByIdUsingPOST
      consumes:
        - application/json
      produces:
        - 'application/json'
      parameters:
        - name: guardian_id
          in: path
          description: guardian_id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Bill'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/bill/{id}/overview':
    get:
      tags:
        - bill-mysql-controller
      summary: Returns the overview information regarding to a particular bill by its {id}
      operationId: getBillsByIdUsingGET
      produces:
        - 'application/json'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Bill'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/bill/{id}/details':
    get:
      tags:
        - bill-mysql-controller
      summary: Returns the detailed information regarding to a particular bill by its {id} by attaching the informartion of the charges included in the particular bill
      operationId: getBillsDetailsUsingGET
      produces:
        - 'application/json'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BillDetail'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /charge/allcharge:
    get:
      tags:
        - charge-mysql-controller
      summary: Returns a list that contains all the charges registered in the database
      operationId: getAllChargesUsingGET
      produces:
        - 'application/json'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Charge'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/charge/{id}':
    get:
      tags:
        - charge-mysql-controller
      summary: Returns a the information regarding a particular charge given its {id}
      operationId: getChargeByIdUsingGET
      produces:
        - 'application/json'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Charge'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /charge:
    post:
      tags:
        - charge-mysql-controller
      summary: Stores information from a new charge in a new record of the database
      operationId: addChargeUsingPOST
      consumes:
        - application/json
      produces:
        - 'application/json'
      parameters:
        - in: body
          name: charge
          description: Charge information
          required: true
          schema:
            type: object
            required:
              - guardian_id
              - player_id
              - amount
            properties:
              guardian_id:
                type: string
              player_id:
                type: string
              amount:
                type: integer
              description:
                type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Charge'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - charge-mysql-controller
      summary: Updates the information regarding a existing charge in the database
      operationId: updateChargeUsingPUT
      consumes:
        - application/json
      produces:
        - 'application/json'
      parameters:
        - in: body
          name: charge
          description: Charge information
          required: true
          schema:
            type: object
            required:
              - id
              - guardian_id
              - player_id
            properties:
              id:
                type: integer
              guardian_id:
                type: string
              player_id:
                type: string
              amount:
                type: integer
              description:
                type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Charge'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /guardian/allguardian:
    get:
      tags:
        - guardian-mongo-controller
      summary: Returns a list that contains all the guardians registered in the database
      operationId: getAllGuardiansUsingGET
      produces:
        - 'application/json'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Guardian'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/guardian/{id}':
    get:
      tags:
        - guardian-mongo-controller
      summary: Returns a the information regarding a particular guardian given its {id}
      operationId: getGuardianByIdUsingGET
      produces:
        - 'application/json'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Guardian'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /player/allplayer:
    get:
      tags:
        - player-mongo-controller
      summary: Returns a list that contains all the guardians registered in the database
      operationId: getAllPlayersUsingGET
      produces:
        - 'application/json'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Player'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/player/{id}':
    get:
      tags:
        - player-mongo-controller
      summary: Returns a the information regarding a particular player given its {id}
      operationId: getPlayerByIdUsingGET
      produces:
        - 'application/json'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Player'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
definitions:
  Guardian:
    type: object
    properties:
      id:
        type: string
      lastName:
        type: string
      firstName:
        type: string
      phoneNumber:
        type: string
      addressCity:
        type: string
      addressState:
        type: string
      addressStreet:
        type: string
      addressZip:
        type: string
      email:
        type: string
    title: Guardian
  Player:
    type: object
    properties:
      id:
        type: string
      lastName:
        type: string
      firstName:
        type: string
      team:
        type: string
      birthdate:
        type: string
        format: date-time
      guardian:
        type: string
    title: Player
  Charge:
    type: object
    properties:
      id:
        type: integer
        format: int32
      guardian_id:
        type: string
      player_id:
        type: string
      date:
        type: string
        format: date-time
      amount:
        type: number
        format: float
      bill_id:
        type: integer
        format: int32
      description:
        type: string
      state:
        type: string
    title: Charge
  Bill:
    type: object
    properties:
      id:
        type: integer
        format: int32
      guardian_id:
        type: string
      issue_date:
        type: string
        format: date-time
      due_date:
        type: string
        format: date-time
      paid_date:
        type: string
        format: date-time
      paid_amount:
        type: number
        format: double
      total_amount:
        type: number
        format: double
    title: Bill
  BillDetail:
    type: object
    properties:
      bill:
        $ref: '#/definitions/Bill'
      chargeList:
        type: array
        items:
          $ref: '#/definitions/Charge'
    title: BillDetail
  View:
    type: object
    properties:
      contentType:
        type: string
    title: View
